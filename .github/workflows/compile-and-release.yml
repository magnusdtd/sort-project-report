name: Compile and Release LaTeX document

on:
  push:
    tags:
      - "*.*.*"

jobs:
  build_latex:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get latest release info
        id: get_release
        uses: actions/github-script@v6
        with:
          script: |
            const latestRelease = await github.rest.repos.getLatestRelease({
              owner: 'magnusdtd',
              repo: 'sort-project'
            });
            core.setOutput('assets', JSON.stringify(latestRelease.data.assets));

      - name: Download images.zip
        run: |
          asset_url=$(echo '${{ steps.get_release.outputs.assets }}' | jq -r '.[] | select(.name == "images.zip") | .browser_download_url')
          curl -L $asset_url -o ./experimental_result/images.zip

      - name: Download result_tables.tex
        run: |
          asset_url=$(echo '${{ steps.get_release.outputs.assets }}' | jq -r '.[] | select(.name == "result_tables.tex") | .browser_download_url')
          curl -L $asset_url -o ./experimental_result/result_tables.tex

      - name: Extract images.zip
        run: unzip ./experimental_result/images.zip -d ./experimental_result

      - name: Compile LaTeX document
        uses: xu-cheng/latex-action@v2
        with: 
          working_directory: .
          root_file: main.tex

      - name: Rename PDF
        run: mv main.pdf Report.pdf

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env: 
          GITHUB_TOKEN: ${{ secrets.magnus_token }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true

      - name: Set upload_url output
        run: echo "upload_url=${{ steps.create_release.outputs.upload_url }}" >> $GITHUB_ENV

      - name: Upload release artifact
        id: upload-release-artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.magnus_token }}
        with:
          upload_url: ${{ env.upload_url }}
          asset_path: ./Report.pdf
          asset_name: Report.pdf
          asset_content_type: application/pdf